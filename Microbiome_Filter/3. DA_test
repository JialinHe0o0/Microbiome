# Jialin He 202308
## 简化版，你猜plus在哪
DA_test <- function(microdat,
                    metadata,
                    group,
                    parametric_test=F,
                    cutoff_padj=0.05){
  
  if(!require(pacman))install.packages(pacman)
  pacman::p_load(tidyverse,ggpubr,rstatix,agricolae)
  
  if(sum(sapply(microdat,is.numeric))!=ncol(microdat)){
    stop('ERROR: Only numeric values can be included in the microdat')
  }
  
  if(sum(row.names(metadata) %in% row.names(microdat))>0){
    sample_in_row = T
    print('Sample ID in row')
  }else if(sum(row.names(metadata) %in% colnames(microdat))>0){
    sample_in_row = F
    print('Sample ID in col')
  }else{
    stop('ERROR: Sample ID must be the rowname/colname in both dataset')
  }
  
  if(sample_in_row == F){
    microdat <- t(microdat) %>% as.data.frame()
  }
  
  metadata <- metadata[row.names(metadata) %in% row.names(microdat),]
  id <- row.names(metadata)
  microdat <- microdat[id,]
  
  colnames(metadata)[colnames(metadata)==group] <- 'group_in_function'
  
  if(!is.factor(metadata$group_in_function)){
    metadata$group_in_function <- as.factor(metadata$group_in_function)
  }
  
  len <- length(levels(metadata$group_in_function))
  
  if(len==2){
    if(parametric_test){
      # t.test
      ttest <- function(x){
        res <- t.test(x~metadata$group_in_function)
        p <-res$p.value
        return(p)
      }
      pvalue <- sapply(microdat,ttest)
    }else{
      # wilcox.test
      wilcox <- function(x){
        res <- wilcox.test(x~metadata$group_in_function)
        p <- res$p.value
        return(p)
      }
      pvalue <- sapply(microdat,wilcox)
    }
  }else if(len>=3){
    if(parametric_test){
      # 方差分析
      av <- function(x){
        res <- aov(x~metadata$group_in_function)
        p <-summary(res)[[1]][1,5]
        return(p)
      }
      pvalue <- sapply(microdat,av)
      pair_method='t.test'
    }else{
      # kruskal.wallis
      kw <- function(x){
        res <- kruskal.test(x~metadata$group_in_function)
        p <- res$p.value
        return(p)
      }
      pvalue <- sapply(microdat,kw)
      pair_method='wilcox.test'
    }
    
  }else{
    stop('ERROR: Just one level in the group')
  }
  
  dat <- data.frame(txao = colnames(microdat),
                    pvalue = pvalue)
  dat$p_adj <- p.adjust(dat$pvalue,'BH')
  
  print(paste0('Number of significant taxo: ',sum(dat$p_adj<cutoff_padj)))
  
  return(dat)
}





